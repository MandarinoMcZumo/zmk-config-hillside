/*
 * Copyright (c) 2021-2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt { quick-tap-ms = <175>; };

#define QWERTY_L 0
#define DVORAK_L 1
#define COLEMK_L 2
#define NAV_L    3
#define SYM_L    4
#define ADJ_L    5
#define Undo   LC(Z)
#define Cut    LC(X)
#define Copy   LC(C)
#define Paste  LC(V)
#define Redo   LC(Y)

/ {
    macros {
        accent_lower_a: accent_lower_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp A &to 0>;
            label = "ACCENT_LOWER_A";
        };

        accent_lower_e: accent_lower_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp E &to 0>;
            label = "ACCENT_LOWER_E";
        };

        accent_lower_i: accent_lower_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp I &to 0>;
            label = "ACCENT_LOWER_I";
        };

        accent_lower_o: accent_lower_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp O &to 0>;
            label = "ACCENT_LOWER_O";
        };

        accent_lower_u: accent_lower_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp U &to 0>;
            label = "ACCENT_LOWER_U";
        };

        accent_upper_a: accent_upper_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp LS(A) &to 0>;
            label = "ACCENT_UPPER_A";
        };

        accent_upper_e: accent_upper_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp LS(E) &to 0>;
            label = "ACCENT_UPPER_E";
        };

        accent_upper_i: accent_upper_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp LS(I) &to 0>;
            label = "ACCENT_UPPER_I";
        };

        accent_upper_o: accent_upper_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp LS(O) &to 0>;
            label = "ACCENT_UPPER_O";
        };

        accent_upper_u: accent_upper_u {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp LS(U) &to 0>;
            label = "ACCENT_UPPER_U";
        };

        special_lower_n: special_lower_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp N &to 0>;
            label = "SPECIAL_LOWER_N";
        };

        special_upper_n: special_upper_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp LS(N) &to 0>;
            label = "SPECIAL_UPPER_N";
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <18 19 20 21 22 6 7 8 9 10 11 23 35 34 33 32 31 30 41 40 39>;
            flavor = "balanced";
            hold-trigger-on-release;
            quick-tap-ms = <175>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <17 16 15 14 13 38 37 36 24 0 12 1 25 26 2 3 4 5 29 28 27>;
            flavor = "balanced";
            hold-trigger-on-release;
            quick-tap-ms = <175>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
        };

        hmrj: hmrj {
            compatible = "zmk,behavior-hold-tap";
            label = "HMRJ";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <17 16 15 14 13 38 37 36 24 0 12 1 25 26 2 3 4 5 29 28 27>;
            flavor = "balanced";
            hold-trigger-on-release;
            quick-tap-ms = <175>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | `     |   Q   |   W   |   E   |   R   |   T   |-----------------------------------|   Y   |   U   |   I   |   O   |   P   | BKSPC |
 * | TAB   |   A   |   S   |   D   |   F   |   G   |-----------------------------------|   H   |   J   |   K   |   L   |   ;   | ENTER |
 * | CTRL  |   Z   |   X   |   C   |   V   |   B   |  ESC  |-------------------|  CAPS |   N   |   M   |   ,   |   .   |   /   |   '   |
 *                                 |  GUI  |  ALT  |SK SHFT|  Nav  |---|  Sym  | SPACE |  ALT  |  GUI  |
 */

            bindings = <
&caps_word                         &kp Q         &kp W            &kp E                &kp R              &kp T                                                               &kp Y                 &kp U                &kp I                 &kp O             &kp P            &sl 5
&hml LS(LA(LC(LEFT_COMMAND))) ESC  &hml LCTRL A  &hml LEFT_ALT S  &hml LEFT_COMMAND D  &hml LEFT_SHIFT F  &hml LA(LS(LCTRL)) G                                                &hmr RS(RA(RCTRL)) H  &hmrj RIGHT_SHIFT J  &hmr RIGHT_COMMAND K  &hmr RIGHT_ALT L  &hmr RCTRL SEMI  &kp SQT
&kp LSHFT                          &kp Z         &kp X            &kp C                &kp V              &kp B                 &trans                             &trans     &kp N                 &kp M                &kp COMMA             &kp DOT           &kp FSLH         &kp MINUS
                                                                                       &mo 4              &mt LEFT_SHIFT TAB    &lt 3 ENTER  &sk LSHIFT    &trans  &kp SPACE  &lt 3 BACKSPACE       &lt 2 DELETE
            >;
        };

        nav_layer {
            /* NAV   
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | Copy  |   1   |   2   |   3   |   4   |   5   |-----------------------------------|   6   |   7   |   8   |   9   |   0   | BSPC  |
 * | Cut   |  GUI  |  Alt  | Ctrl  | Shift | Paste |-----------------------------------| PG UP |  Left |  Up   |  Down | Right | PG DN |
 * | Ctrl  |  F1   |  F2   |  F3   |  F4   |  F5   |  UnDo |-------------------| ReDo  |  F6   |  F7   |  F8   |  F9   |  F10  | Ctrl  |
 *                                 |       |       |       |       |---| ADJ_L |       |       |       |
 */

            bindings = <
&kp Copy  &kp N1    &kp N2    &kp N3     &kp N4     &kp N5                                              &kp N6     &kp N7    &kp N8  &kp N9    &kp N0     &trans
&kp Cut   &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp Paste                                           &kp PG_UP  &kp LEFT  &kp UP  &kp DOWN  &kp RIGHT  &kp PG_DN
&trans    &kp F1    &kp F2    &kp F3     &kp F4     &kp F5     &kp Undo                       &kp Redo  &kp F6     &kp F7    &kp F8  &kp F9    &kp F10    &kp RCTRL
                                         &trans     &trans     &trans    &trans    &mo ADJ_L  &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        sym_layer {
            /* SYM
 * -------------------------------------------------------------------------------------------------------------------------------------
 * | INS   |   !   |   @   |   #   |   $   |   %   |-----------------------------------|   ^   |   &   |   *   |   (   |   )   | BSPC  |
 * |       |   \   |   -   |   =   |   [   |   ]   |-----------------------------------| HOME  | Shift | Ctrl  | Alt   | Gui   | END   |
 * | Ctrl  |   |   |   _   |   +   |   {   |   }   |SkAltGr|-------------------| MENU  | Mute  | Vol-  | Vol+  | Play  |       | Ctrl  |
 *                                 |       |       |       |  ADJ_L |---|      |       |       |       |
 */

            bindings = <
&kp INS  &kp EXCL  &kp AT     &kp HASH   &kp DOLLAR  &kp PERCENT                                            &kp CARET   &kp AMPS      &kp ASTRK     &kp LPAR  &kp RPAR  &kp DEL
&none    &kp BSLH  &kp MINUS  &kp EQUAL  &kp LBKT    &kp RBKT                                               &kp HOME    &kp RSHFT     &kp RCTRL     &kp LALT  &kp RGUI  &kp END
&trans   &kp PIPE  &kp UNDER  &kp PLUS   &kp LBRC    &kp RBRC     &sk RALT                       &kp K_APP  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP  &none     &kp RCTRL
                                         &trans      &trans       &trans    &mo ADJ_L    &trans  &trans     &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        adj_layer {
            /* ADJUST
 * -------------------------------------------------------------------------------------------------------------------------------------
 * |       | QWERTY| DVORAK| COLEMK|       |       |-----------------------------------|       |  F11  |  F12  |Prt Scr|EP_OFF | EP_ON |
 * | RESET | BT 0  | BT 1  | BT 2  | BT 3  | BT 4  |-----------------------------------|       |       |       |       |       | RESET |
 * |       | LGUI  | LALT  | LCTRL | LSHIFT|       |BT CLR |-------------------|       |       |       |OUT_USB|OUT_BLE|       | BOOTL |
 *                                 |       |       |       |       |---|       |       |       |       |
 */

            bindings = <
&none       &to QWERTY_L  &to DVORAK_L  &to COLEMK_L  &none         &none                                               &none   &kp F11  &kp F12       &kp PRINTSCREEN  &ext_power EP_OFF  &ext_power EP_ON
&sys_reset  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                        &none   &none    &none         &none            &none              &sys_reset
&none       &kp LGUI      &kp LALT      &kp LCTRL     &kp LSHIFT    &none         &bt BT_CLR                    &none   &none   &none    &out OUT_USB  &out OUT_BLE     &none              &bootloader
                                                      &trans        &trans        &trans      &trans    &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
